// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package dynamicworkflow.proxies;

public class DynamicWorkflow
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dynamicWorkflowMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DynamicWorkflow.DynamicWorkflow";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Workflow_Name("Workflow_Name"),
		Is_Active("Is_Active"),
		DynamicWorkflow_Template("DynamicWorkflow.DynamicWorkflow_Template"),
		DynamicWorkflow_Applicant("DynamicWorkflow.DynamicWorkflow_Applicant");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DynamicWorkflow(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected DynamicWorkflow(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dynamicWorkflowMendixObject)
	{
		if (dynamicWorkflowMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, dynamicWorkflowMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.dynamicWorkflowMendixObject = dynamicWorkflowMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DynamicWorkflow.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static dynamicworkflow.proxies.DynamicWorkflow initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return dynamicworkflow.proxies.DynamicWorkflow.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static dynamicworkflow.proxies.DynamicWorkflow initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new dynamicworkflow.proxies.DynamicWorkflow(context, mendixObject);
	}

	public static dynamicworkflow.proxies.DynamicWorkflow load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return dynamicworkflow.proxies.DynamicWorkflow.initialize(context, mendixObject);
	}

	public static java.util.List<dynamicworkflow.proxies.DynamicWorkflow> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> dynamicworkflow.proxies.DynamicWorkflow.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Workflow_Name
	 */
	public final java.lang.String getWorkflow_Name()
	{
		return getWorkflow_Name(getContext());
	}

	/**
	 * @param context
	 * @return value of Workflow_Name
	 */
	public final java.lang.String getWorkflow_Name(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Workflow_Name.toString());
	}

	/**
	 * Set value of Workflow_Name
	 * @param workflow_name
	 */
	public final void setWorkflow_Name(java.lang.String workflow_name)
	{
		setWorkflow_Name(getContext(), workflow_name);
	}

	/**
	 * Set value of Workflow_Name
	 * @param context
	 * @param workflow_name
	 */
	public final void setWorkflow_Name(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String workflow_name)
	{
		getMendixObject().setValue(context, MemberNames.Workflow_Name.toString(), workflow_name);
	}

	/**
	 * @return value of Is_Active
	 */
	public final java.lang.Boolean getIs_Active()
	{
		return getIs_Active(getContext());
	}

	/**
	 * @param context
	 * @return value of Is_Active
	 */
	public final java.lang.Boolean getIs_Active(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Is_Active.toString());
	}

	/**
	 * Set value of Is_Active
	 * @param is_active
	 */
	public final void setIs_Active(java.lang.Boolean is_active)
	{
		setIs_Active(getContext(), is_active);
	}

	/**
	 * Set value of Is_Active
	 * @param context
	 * @param is_active
	 */
	public final void setIs_Active(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean is_active)
	{
		getMendixObject().setValue(context, MemberNames.Is_Active.toString(), is_active);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of DynamicWorkflow_Template
	 */
	public final dynamicform.proxies.Template getDynamicWorkflow_Template() throws com.mendix.core.CoreException
	{
		return getDynamicWorkflow_Template(getContext());
	}

	/**
	 * @param context
	 * @return value of DynamicWorkflow_Template
	 * @throws com.mendix.core.CoreException
	 */
	public final dynamicform.proxies.Template getDynamicWorkflow_Template(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		dynamicform.proxies.Template result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DynamicWorkflow_Template.toString());
		if (identifier != null) {
			result = dynamicform.proxies.Template.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of DynamicWorkflow_Template
	 * @param dynamicworkflow_template
	 */
	public final void setDynamicWorkflow_Template(dynamicform.proxies.Template dynamicworkflow_template)
	{
		setDynamicWorkflow_Template(getContext(), dynamicworkflow_template);
	}

	/**
	 * Set value of DynamicWorkflow_Template
	 * @param context
	 * @param dynamicworkflow_template
	 */
	public final void setDynamicWorkflow_Template(com.mendix.systemwideinterfaces.core.IContext context, dynamicform.proxies.Template dynamicworkflow_template)
	{
		if (dynamicworkflow_template == null) {
			getMendixObject().setValue(context, MemberNames.DynamicWorkflow_Template.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.DynamicWorkflow_Template.toString(), dynamicworkflow_template.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of DynamicWorkflow_Applicant
	 */
	public final myfirstmodule.proxies.Applicant getDynamicWorkflow_Applicant() throws com.mendix.core.CoreException
	{
		return getDynamicWorkflow_Applicant(getContext());
	}

	/**
	 * @param context
	 * @return value of DynamicWorkflow_Applicant
	 * @throws com.mendix.core.CoreException
	 */
	public final myfirstmodule.proxies.Applicant getDynamicWorkflow_Applicant(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Applicant result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DynamicWorkflow_Applicant.toString());
		if (identifier != null) {
			result = myfirstmodule.proxies.Applicant.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of DynamicWorkflow_Applicant
	 * @param dynamicworkflow_applicant
	 */
	public final void setDynamicWorkflow_Applicant(myfirstmodule.proxies.Applicant dynamicworkflow_applicant)
	{
		setDynamicWorkflow_Applicant(getContext(), dynamicworkflow_applicant);
	}

	/**
	 * Set value of DynamicWorkflow_Applicant
	 * @param context
	 * @param dynamicworkflow_applicant
	 */
	public final void setDynamicWorkflow_Applicant(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Applicant dynamicworkflow_applicant)
	{
		if (dynamicworkflow_applicant == null) {
			getMendixObject().setValue(context, MemberNames.DynamicWorkflow_Applicant.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.DynamicWorkflow_Applicant.toString(), dynamicworkflow_applicant.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dynamicWorkflowMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final dynamicworkflow.proxies.DynamicWorkflow that = (dynamicworkflow.proxies.DynamicWorkflow) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
